Q - # WAQ to display the records which have 3 or more consecutive rows with no of people than 100(inclusive) each day
sol - 
table schema - 

create table stadium (
id int,
visit_date date,
no_of_people int
);

insert into stadium
values (1,'2017-07-01',10)
,(2,'2017-07-02',109)
,(3,'2017-07-03',150)
,(4,'2017-07-04',99)
,(5,'2017-07-05',145)
,(6,'2017-07-06',1455)
,(7,'2017-07-07',199)
,(8,'2017-07-08',188);

coding - 
with grp as (
select * ,
row_number() over (order by visit_date) as rn,
id - row_number() over (order by visit_date) as gr
from stadium
where no_of_people >=100)
select * from grp 
where gr in(
select gr
from grp
group by gr
having count(gr)>=3)
;


Q2 - WAQ to find the median salary of each company

create table employee 
(
emp_id int,
company varchar(10),
salary int
);

insert into employee values (1,'A',2341);
insert into employee values (2,'A',341);
insert into employee values (3,'A',15);
insert into employee values (4,'A',15314);
insert into employee values (5,'A',451);
insert into employee values (6,'A',513);
insert into employee values (7,'B',15);
insert into employee values (8,'B',13);
insert into employee values (9,'B',1154);
insert into employee values (10,'B',1345);
insert into employee values (11,'B',1221);
insert into employee values (12,'B',234);
insert into employee values (13,'C',2345);
insert into employee values (14,'C',2645);
insert into employee values (15,'C',2645);
insert into employee values (16,'C',2652);
insert into employee values (17,'C',65);

select company, avg(salary)
from (select *,
row_number() over(partition by company order by salary) as rn,
count(1) over(partition by company) as total_cnt
from employee) a
where rn between total_cnt*1.0/2 and total_cnt*1.0/2+1
group by company ;

or 

with cte as (select *,
row_number() over(partition by company order by salary) as rn,
count(emp_id) over(partition by company) as n
from employee)
select * from cte
where rn >=n/2 and rn<=n/2+1;
